---
import clsx from "clsx";
import type { HeaderSection } from "@layouts/HeaderNav.astro";

export type Props = HeaderSection & {
	isSelected: boolean;
};

const { categories, isSelected, linkPath, name } = Astro.props;
// if (categories?.length) {
// 	console.log("categories:", categories);
// }

// const links = categories?.find((cat) => cat.links?.length)?.links;
// if (links) {
// 	// console.log("links:", Array.isArray(links) ? "array" : typeof links);
// 	console.log("links:", links[0]);
// }
---

{
	linkPath ? (
		<a
			class="underline-offset-8 hover:underline-offset-4 hover:decoration-2 transition-all"
			href={linkPath}
		>
			{name}
		</a>
	) : (
		<button>{name}</button>
	)
}
{
	isSelected && (
		<div class="absolute left-0 right-0 z-10 p-6 flex max-h-screen overflow-scroll text-left bg-gray-800/90">
			<div class={clsx("flex gap-8 m-auto ")}>
				{/* <pre>{JSON.stringify(categories, null, "\t")}</pre> */}
				{categories?.map(
					({ links, linkPath, name, style, ...rest }) => (
						// <pre>{JSON.stringify(rest, null, "\t")}</pre>
						<section>
							{name && (
								<h4>
									{linkPath ? (
										<a href={linkPath}>{name}</a>
									) : (
										name
									)}
								</h4>
							)}
							<ul
								class={
									style === "boxes"
										? "flex flex-wrap gap-2 max-w-40"
										: ""
								}
							>
								{links?.map(({ text, url }) => (
									<li>
										<a href={url}>{text}</a>
									</li>
								))}
							</ul>
						</section>
					)
				)}
			</div>
		</div>
	)
}
